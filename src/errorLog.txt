In file included from /usr/include/c++/13/bits/stl_algobase.h:71,
                 from /usr/include/c++/13/string:51,
                 from /usr/include/c++/13/bits/locale_classes.h:40,
                 from /usr/include/c++/13/bits/ios_base.h:41,
                 from /usr/include/c++/13/ios:44,
                 from /usr/include/c++/13/istream:40,
                 from /usr/include/c++/13/fstream:40,
                 from config.h:4,
                 from main.cpp:8:
/usr/include/c++/13/bits/predefined_ops.h: In instantiation of ‘bool __gnu_cxx::__ops::_Iter_equals_val<_Value>::operator()(_Iterator) [with _Iterator = boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> > > > >, long unsigned int, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int>; _Value = const long unsigned int]’:
/usr/include/c++/13/bits/stl_algobase.h:2055:42:   required from ‘_InputIterator std::__find_if(_InputIterator, _InputIterator, _Predicate, input_iterator_tag) [with _InputIterator = boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, _List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >*, vector<boost::detail::stored_edge_iter<long unsigned int, _List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >, allocator<boost::detail::stored_edge_iter<long unsigned int, _List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> > > > >, long unsigned int, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int>; _Predicate = __gnu_cxx::__ops::_Iter_equals_val<const long unsigned int>]’
/usr/include/c++/13/bits/stl_algobase.h:2117:23:   required from ‘_Iterator std::__find_if(_Iterator, _Iterator, _Predicate) [with _Iterator = boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, _List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >*, vector<boost::detail::stored_edge_iter<long unsigned int, _List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >, allocator<boost::detail::stored_edge_iter<long unsigned int, _List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> > > > >, long unsigned int, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int>; _Predicate = __gnu_cxx::__ops::_Iter_equals_val<const long unsigned int>]’
/usr/include/c++/13/bits/stl_algo.h:3897:28:   required from ‘_IIter std::find(_IIter, _IIter, const _Tp&) [with _IIter = boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, _List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >*, vector<boost::detail::stored_edge_iter<long unsigned int, _List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >, allocator<boost::detail::stored_edge_iter<long unsigned int, _List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> > > > >, long unsigned int, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int>; _Tp = long unsigned int]’
holePuncher.cpp:79:30:   required from here
/usr/include/c++/13/bits/predefined_ops.h:270:24: error: no match for ‘operator==’ (operand types are ‘boost::iterators::detail::iterator_facade_base<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> > > > >, long unsigned int, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int>, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int, false, false>::reference’ {aka ‘boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>’} and ‘const long unsigned int’)
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
In file included from /usr/include/c++/13/string:48:
/usr/include/c++/13/bits/stl_iterator.h:1217:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __normal_iterator<_IteratorL, _Container>&, const __normal_iterator<_IteratorR, _Container>&)’
 1217 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/13/bits/stl_iterator.h:1217:5: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   ‘boost::iterators::detail::iterator_facade_base<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> > > > >, long unsigned int, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int>, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int, false, false>::reference’ {aka ‘boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>’} is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
/usr/include/c++/13/bits/stl_iterator.h:1225:5: note: candidate: ‘template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const __normal_iterator<_Iterator, _Container>&, const __normal_iterator<_Iterator, _Container>&)’
 1225 |     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/13/bits/stl_iterator.h:1225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   ‘boost::iterators::detail::iterator_facade_base<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> > > > >, long unsigned int, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int>, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int, false, false>::reference’ {aka ‘boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>’} is not derived from ‘const __gnu_cxx::__normal_iterator<_Iterator, _Container>’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
In file included from /usr/include/boost/property_map/property_map.hpp:21,
                 from /usr/include/boost/graph/properties.hpp:19,
                 from config.h:17:
/usr/include/boost/concept_archetype.hpp:159:3: note: candidate: ‘template<class Base> boost::boolean_archetype boost::operator==(const equality_comparable_archetype<Base>&, const equality_comparable_archetype<Base>&)’
  159 |   operator==(const equality_comparable_archetype<Base>&,
      |   ^~~~~~~~
/usr/include/boost/concept_archetype.hpp:159:3: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   ‘boost::iterators::detail::iterator_facade_base<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> > > > >, long unsigned int, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int>, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int, false, false>::reference’ {aka ‘boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>’} is not derived from ‘const boost::equality_comparable_archetype<Base>’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
/usr/include/boost/concept_archetype.hpp:187:3: note: candidate: ‘template<class Base1, class Base2> boost::boolean_archetype boost::operator==(const equality_comparable2_first_archetype<Base1>&, const equality_comparable2_second_archetype<Base2>&)’
  187 |   operator==(const equality_comparable2_first_archetype<Base1>&,
      |   ^~~~~~~~
/usr/include/boost/concept_archetype.hpp:187:3: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   ‘boost::iterators::detail::iterator_facade_base<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> > > > >, long unsigned int, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int>, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int, false, false>::reference’ {aka ‘boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>’} is not derived from ‘const boost::equality_comparable2_first_archetype<Base1>’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
/usr/include/boost/concept_archetype.hpp:289:3: note: candidate: ‘template<class BaseFirst, class BaseSecond, class Tag> boost::boolean_archetype boost::operator==(const equal_op_first_archetype<BaseFirst, Tag>&, const equal_op_second_archetype<BaseSecond, Tag>&)’
  289 |   BOOST_DEFINE_BINARY_PREDICATE_ARCHETYPE(==, equal_op)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/boost/concept_archetype.hpp:289:3: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   ‘boost::iterators::detail::iterator_facade_base<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> > > > >, long unsigned int, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int>, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int, false, false>::reference’ {aka ‘boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>’} is not derived from ‘const boost::equal_op_first_archetype<BaseFirst, Tag>’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
In file included from /usr/include/boost/property_map/vector_property_map.hpp:14,
                 from /usr/include/boost/property_map/property_map.hpp:602:
/usr/include/boost/smart_ptr/shared_ptr.hpp:832:40: note: candidate: ‘template<class T, class U> bool boost::operator==(const shared_ptr<X>&, const shared_ptr<U>&)’
  832 | template<class T, class U> inline bool operator==(shared_ptr<T> const & a, shared_ptr<U> const & b) BOOST_SP_NOEXCEPT
      |                                        ^~~~~~~~
/usr/include/boost/smart_ptr/shared_ptr.hpp:832:40: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   ‘boost::iterators::detail::iterator_facade_base<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> > > > >, long unsigned int, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int>, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int, false, false>::reference’ {aka ‘boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>’} is not derived from ‘const boost::shared_ptr<X>’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
/usr/include/boost/smart_ptr/shared_ptr.hpp:855:31: note: candidate: ‘template<class T> bool boost::operator==(const shared_ptr<X>&, detail::sp_nullptr_t)’
  855 | template<class T> inline bool operator==( shared_ptr<T> const & p, boost::detail::sp_nullptr_t ) BOOST_SP_NOEXCEPT
      |                               ^~~~~~~~
/usr/include/boost/smart_ptr/shared_ptr.hpp:855:31: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   ‘boost::iterators::detail::iterator_facade_base<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> > > > >, long unsigned int, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int>, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int, false, false>::reference’ {aka ‘boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>’} is not derived from ‘const boost::shared_ptr<X>’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
/usr/include/boost/smart_ptr/shared_ptr.hpp:860:31: note: candidate: ‘template<class T> bool boost::operator==(detail::sp_nullptr_t, const shared_ptr<X>&)’
  860 | template<class T> inline bool operator==( boost::detail::sp_nullptr_t, shared_ptr<T> const & p ) BOOST_SP_NOEXCEPT
      |                               ^~~~~~~~
/usr/include/boost/smart_ptr/shared_ptr.hpp:860:31: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   mismatched types ‘const boost::shared_ptr<X>’ and ‘const long unsigned int’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
In file included from /usr/include/boost/unordered_set.hpp:17,
                 from /usr/include/boost/graph/adjacency_list.hpp:20,
                 from config.h:19:
/usr/include/boost/unordered/unordered_set.hpp:1900:17: note: candidate: ‘template<class T, class H, class P, class A> bool boost::unordered::operator==(const unordered_multiset<T, H, P, A>&, const unordered_multiset<T, H, P, A>&)’
 1900 |     inline bool operator==(unordered_multiset<T, H, P, A> const& m1,
      |                 ^~~~~~~~
/usr/include/boost/unordered/unordered_set.hpp:1900:17: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   ‘boost::iterators::detail::iterator_facade_base<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> > > > >, long unsigned int, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int>, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int, false, false>::reference’ {aka ‘boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>’} is not derived from ‘const boost::unordered::unordered_multiset<T, H, P, A>’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
/usr/include/boost/unordered/unordered_set.hpp:1497:17: note: candidate: ‘template<class T, class H, class P, class A> bool boost::unordered::operator==(const unordered_set<T, H, P, A>&, const unordered_set<T, H, P, A>&)’
 1497 |     inline bool operator==(
      |                 ^~~~~~~~
/usr/include/boost/unordered/unordered_set.hpp:1497:17: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   ‘boost::iterators::detail::iterator_facade_base<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> > > > >, long unsigned int, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int>, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int, false, false>::reference’ {aka ‘boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>’} is not derived from ‘const boost::unordered::unordered_set<T, H, P, A>’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
In file included from /usr/include/boost/scoped_ptr.hpp:13,
                 from /usr/include/boost/graph/adjacency_list.hpp:22:
/usr/include/boost/smart_ptr/scoped_ptr.hpp:127:31: note: candidate: ‘template<class T> bool boost::operator==(const scoped_ptr<T>&, detail::sp_nullptr_t)’
  127 | template<class T> inline bool operator==( scoped_ptr<T> const & p, boost::detail::sp_nullptr_t ) BOOST_SP_NOEXCEPT
      |                               ^~~~~~~~
/usr/include/boost/smart_ptr/scoped_ptr.hpp:127:31: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   ‘boost::iterators::detail::iterator_facade_base<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> > > > >, long unsigned int, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int>, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int, false, false>::reference’ {aka ‘boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>’} is not derived from ‘const boost::scoped_ptr<T>’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
/usr/include/boost/smart_ptr/scoped_ptr.hpp:132:31: note: candidate: ‘template<class T> bool boost::operator==(detail::sp_nullptr_t, const scoped_ptr<T>&)’
  132 | template<class T> inline bool operator==( boost::detail::sp_nullptr_t, scoped_ptr<T> const & p ) BOOST_SP_NOEXCEPT
      |                               ^~~~~~~~
/usr/include/boost/smart_ptr/scoped_ptr.hpp:132:31: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   mismatched types ‘const boost::scoped_ptr<T>’ and ‘const long unsigned int’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
In file included from /usr/include/boost/optional/optional.hpp:1602,
                 from /usr/include/boost/optional.hpp:15,
                 from /usr/include/boost/graph/named_graph.hpp:21,
                 from /usr/include/boost/graph/adjacency_list.hpp:36:
/usr/include/boost/optional/detail/optional_relops.hpp:28:6: note: candidate: ‘template<class T> bool boost::operator==(const optional<T>&, const optional<T>&)’
   28 | bool operator == ( optional<T> const& x, optional<T> const& y )
      |      ^~~~~~~~
/usr/include/boost/optional/detail/optional_relops.hpp:28:6: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   ‘boost::iterators::detail::iterator_facade_base<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> > > > >, long unsigned int, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int>, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int, false, false>::reference’ {aka ‘boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>’} is not derived from ‘const boost::optional<T>’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
/usr/include/boost/optional/detail/optional_relops.hpp:62:6: note: candidate: ‘template<class T> bool boost::operator==(const optional<T>&, const T&)’
   62 | bool operator == ( optional<T> const& x, T const& y )
      |      ^~~~~~~~
/usr/include/boost/optional/detail/optional_relops.hpp:62:6: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   ‘boost::iterators::detail::iterator_facade_base<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> > > > >, long unsigned int, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int>, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int, false, false>::reference’ {aka ‘boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>’} is not derived from ‘const boost::optional<T>’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
/usr/include/boost/optional/detail/optional_relops.hpp:96:6: note: candidate: ‘template<class T> bool boost::operator==(const T&, const optional<T>&)’
   96 | bool operator == ( T const& x, optional<T> const& y )
      |      ^~~~~~~~
/usr/include/boost/optional/detail/optional_relops.hpp:96:6: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   mismatched types ‘const boost::optional<T>’ and ‘const long unsigned int’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
/usr/include/boost/optional/detail/optional_relops.hpp:131:6: note: candidate: ‘template<class T> bool boost::operator==(const optional<T>&, none_t)’
  131 | bool operator == ( optional<T> const& x, none_t ) BOOST_NOEXCEPT
      |      ^~~~~~~~
/usr/include/boost/optional/detail/optional_relops.hpp:131:6: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   ‘boost::iterators::detail::iterator_facade_base<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> > > > >, long unsigned int, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int>, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int, false, false>::reference’ {aka ‘boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>’} is not derived from ‘const boost::optional<T>’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
/usr/include/boost/optional/detail/optional_relops.hpp:165:6: note: candidate: ‘template<class T> bool boost::operator==(none_t, const optional<T>&)’
  165 | bool operator == ( none_t , optional<T> const& y ) BOOST_NOEXCEPT
      |      ^~~~~~~~
/usr/include/boost/optional/detail/optional_relops.hpp:165:6: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   mismatched types ‘const boost::optional<T>’ and ‘const long unsigned int’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
In file included from /usr/include/boost/unordered_map.hpp:17,
                 from /usr/include/boost/pending/container_traits.hpp:24,
                 from /usr/include/boost/graph/named_graph.hpp:23:
/usr/include/boost/unordered/unordered_map.hpp:2386:17: note: candidate: ‘template<class K, class T, class H, class P, class A> bool boost::unordered::operator==(const unordered_multimap<K, T, H, P, A>&, const unordered_multimap<K, T, H, P, A>&)’
 2386 |     inline bool operator==(unordered_multimap<K, T, H, P, A> const& m1,
      |                 ^~~~~~~~
/usr/include/boost/unordered/unordered_map.hpp:2386:17: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   ‘boost::iterators::detail::iterator_facade_base<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> > > > >, long unsigned int, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int>, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int, false, false>::reference’ {aka ‘boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>’} is not derived from ‘const boost::unordered::unordered_multimap<K, T, H, P, A>’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
/usr/include/boost/unordered/unordered_map.hpp:1941:17: note: candidate: ‘template<class K, class T, class H, class P, class A> bool boost::unordered::operator==(const unordered_map<K, T, H, P, A>&, const unordered_map<K, T, H, P, A>&)’
 1941 |     inline bool operator==(unordered_map<K, T, H, P, A> const& m1,
      |                 ^~~~~~~~
/usr/include/boost/unordered/unordered_map.hpp:1941:17: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   ‘boost::iterators::detail::iterator_facade_base<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> > > > >, long unsigned int, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int>, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int, false, false>::reference’ {aka ‘boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>’} is not derived from ‘const boost::unordered::unordered_map<K, T, H, P, A>’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
In file included from /usr/include/boost/range/iterator_range.hpp:13,
                 from /usr/include/boost/range/irange.hpp:16,
                 from /usr/include/boost/graph/detail/adjacency_list.hpp:21,
                 from /usr/include/boost/graph/adjacency_list.hpp:255:
/usr/include/boost/range/iterator_range_core.hpp:585:9: note: candidate: ‘template<class IteratorT, class ForwardRange> typename boost::enable_if<boost::mpl::not_<boost::is_base_and_derived<boost::iterator_range_detail::iterator_range_tag, ForwardRange> >, bool>::type boost::operator==(const ForwardRange&, const iterator_range<IteratorT>&)’
  585 |         operator==( const ForwardRange& l, const iterator_range<IteratorT>& r )
      |         ^~~~~~~~
/usr/include/boost/range/iterator_range_core.hpp:585:9: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   mismatched types ‘const boost::iterator_range<IteratorT>’ and ‘const long unsigned int’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
/usr/include/boost/range/iterator_range_core.hpp:642:9: note: candidate: ‘template<class Iterator1T, class Iterator2T> bool boost::operator==(const iterator_range<IteratorT>&, const iterator_range<Iterator2T>&)’
  642 |         operator==( const iterator_range<Iterator1T>& l, const iterator_range<Iterator2T>& r )
      |         ^~~~~~~~
/usr/include/boost/range/iterator_range_core.hpp:642:9: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   ‘boost::iterators::detail::iterator_facade_base<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> > > > >, long unsigned int, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int>, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int, false, false>::reference’ {aka ‘boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>’} is not derived from ‘const boost::iterator_range<IteratorT>’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
/usr/include/boost/range/iterator_range_core.hpp:652:9: note: candidate: ‘template<class IteratorT, class ForwardRange> typename boost::enable_if<boost::mpl::not_<boost::is_base_and_derived<boost::iterator_range_detail::iterator_range_tag, ForwardRange> >, bool>::type boost::operator==(const iterator_range<IteratorT>&, const ForwardRange&)’
  652 |         operator==( const iterator_range<IteratorT>& l, const ForwardRange& r )
      |         ^~~~~~~~
/usr/include/boost/range/iterator_range_core.hpp:652:9: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   ‘boost::iterators::detail::iterator_facade_base<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> > > > >, long unsigned int, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int>, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int, false, false>::reference’ {aka ‘boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>’} is not derived from ‘const boost::iterator_range<IteratorT>’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
In file included from /usr/include/boost/lexical_cast/detail/converter_lexical.hpp:50,
                 from /usr/include/boost/lexical_cast/try_lexical_convert.hpp:44,
                 from /usr/include/boost/lexical_cast.hpp:32,
                 from /usr/include/boost/property_map/dynamic_property_map.hpp:23,
                 from /usr/include/boost/graph/graphviz.hpp:25,
                 from config.h:21:
/usr/include/boost/array.hpp:323:10: note: candidate: ‘template<class T, long unsigned int N> bool boost::operator==(const array<T, N>&, const array<T, N>&)’
  323 |     bool operator== (const array<T,N>& x, const array<T,N>& y) {
      |          ^~~~~~~~
/usr/include/boost/array.hpp:323:10: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   ‘boost::iterators::detail::iterator_facade_base<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> > > > >, long unsigned int, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int>, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int, false, false>::reference’ {aka ‘boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>’} is not derived from ‘const boost::array<T, N>’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
In file included from /usr/include/boost/function/detail/prologue.hpp:17,
                 from /usr/include/boost/function/function_template.hpp:13,
                 from /usr/include/boost/function/detail/maybe_include.hpp:36,
                 from /usr/include/boost/function/function3.hpp:11,
                 from /usr/include/boost/property_map/dynamic_property_map.hpp:25:
/usr/include/boost/function/function_base.hpp:777:3: note: candidate: ‘template<class Functor> typename boost::enable_if_<(! boost::is_integral<T>::value), bool>::type boost::operator==(const function_base&, Functor)’
  777 |   operator==(const function_base& f, Functor g)
      |   ^~~~~~~~
/usr/include/boost/function/function_base.hpp:777:3: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:18: note:   cannot convert ‘((boost::iterators::detail::iterator_facade_base<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> > > > >, long unsigned int, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int>, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int, false, false>*)(& __it))->boost::iterators::detail::iterator_facade_base<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> > > > >, long unsigned int, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int>, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int, false, false>::operator*()’ (type ‘boost::iterators::detail::iterator_facade_base<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> > > > >, long unsigned int, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int>, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int, false, false>::reference’ {aka ‘boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>’}) to type ‘const boost::function_base&’
  270 |         { return *__it == _M_value; }
      |                  ^~~~~
/usr/include/boost/function/function_base.hpp:786:3: note: candidate: ‘template<class Functor> typename boost::enable_if_<(! boost::is_integral<T>::value), bool>::type boost::operator==(Functor, const function_base&)’
  786 |   operator==(Functor g, const function_base& f)
      |   ^~~~~~~~
/usr/include/boost/function/function_base.hpp:786:3: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   cannot convert ‘((__gnu_cxx::__ops::_Iter_equals_val<const long unsigned int>*)this)->__gnu_cxx::__ops::_Iter_equals_val<const long unsigned int>::_M_value’ (type ‘const long unsigned int’) to type ‘const boost::function_base&’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
/usr/include/boost/function/function_base.hpp:814:3: note: candidate: ‘template<class Functor> typename boost::enable_if_<(! boost::is_integral<T>::value), bool>::type boost::operator==(const function_base&, reference_wrapper<T>)’
  814 |   operator==(const function_base& f, reference_wrapper<Functor> g)
      |   ^~~~~~~~
/usr/include/boost/function/function_base.hpp:814:3: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   mismatched types ‘boost::reference_wrapper<T>’ and ‘long unsigned int’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
/usr/include/boost/function/function_base.hpp:823:3: note: candidate: ‘template<class Functor> typename boost::enable_if_<(! boost::is_integral<T>::value), bool>::type boost::operator==(reference_wrapper<T>, const function_base&)’
  823 |   operator==(reference_wrapper<Functor> g, const function_base& f)
      |   ^~~~~~~~
/usr/include/boost/function/function_base.hpp:823:3: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   ‘boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>’ is not derived from ‘boost::reference_wrapper<T>’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
/usr/include/boost/function/function_template.hpp:1042:8: note: candidate: ‘template<class R, class T0, class T1, class T2> void boost::operator==(const function3<R, T0, T1, T2>&, const function3<R, T0, T1, T2>&)’
 1042 |   void operator==(const BOOST_FUNCTION_FUNCTION<
      |        ^~~~~~~~
/usr/include/boost/function/function_template.hpp:1042:8: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   ‘boost::iterators::detail::iterator_facade_base<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> > > > >, long unsigned int, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int>, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int, false, false>::reference’ {aka ‘boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>’} is not derived from ‘const boost::function3<R, T0, T1, T2>’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
In file included from /usr/include/boost/scoped_array.hpp:13,
                 from /usr/include/boost/smart_ptr.hpp:18,
                 from /usr/include/boost/property_map/dynamic_property_map.hpp:33:
/usr/include/boost/smart_ptr/scoped_array.hpp:103:31: note: candidate: ‘template<class T> bool boost::operator==(const scoped_array<T>&, detail::sp_nullptr_t)’
  103 | template<class T> inline bool operator==( scoped_array<T> const & p, boost::detail::sp_nullptr_t ) BOOST_SP_NOEXCEPT
      |                               ^~~~~~~~
/usr/include/boost/smart_ptr/scoped_array.hpp:103:31: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   ‘boost::iterators::detail::iterator_facade_base<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> > > > >, long unsigned int, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int>, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int, false, false>::reference’ {aka ‘boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>’} is not derived from ‘const boost::scoped_array<T>’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
/usr/include/boost/smart_ptr/scoped_array.hpp:108:31: note: candidate: ‘template<class T> bool boost::operator==(detail::sp_nullptr_t, const scoped_array<T>&)’
  108 | template<class T> inline bool operator==( boost::detail::sp_nullptr_t, scoped_array<T> const & p ) BOOST_SP_NOEXCEPT
      |                               ^~~~~~~~
/usr/include/boost/smart_ptr/scoped_array.hpp:108:31: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   mismatched types ‘const boost::scoped_array<T>’ and ‘const long unsigned int’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
In file included from /usr/include/boost/shared_array.hpp:17,
                 from /usr/include/boost/smart_ptr.hpp:20:
/usr/include/boost/smart_ptr/shared_array.hpp:242:31: note: candidate: ‘template<class T> bool boost::operator==(const shared_array<T>&, const shared_array<T>&)’
  242 | template<class T> inline bool operator==(shared_array<T> const & a, shared_array<T> const & b) BOOST_SP_NOEXCEPT
      |                               ^~~~~~~~
/usr/include/boost/smart_ptr/shared_array.hpp:242:31: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   ‘boost::iterators::detail::iterator_facade_base<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> > > > >, long unsigned int, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int>, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int, false, false>::reference’ {aka ‘boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>’} is not derived from ‘const boost::shared_array<T>’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
/usr/include/boost/smart_ptr/shared_array.hpp:254:31: note: candidate: ‘template<class T> bool boost::operator==(const shared_array<T>&, detail::sp_nullptr_t)’
  254 | template<class T> inline bool operator==( shared_array<T> const & p, boost::detail::sp_nullptr_t ) BOOST_SP_NOEXCEPT
      |                               ^~~~~~~~
/usr/include/boost/smart_ptr/shared_array.hpp:254:31: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   ‘boost::iterators::detail::iterator_facade_base<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> > > > >, long unsigned int, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int>, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int, false, false>::reference’ {aka ‘boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>’} is not derived from ‘const boost::shared_array<T>’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
/usr/include/boost/smart_ptr/shared_array.hpp:259:31: note: candidate: ‘template<class T> bool boost::operator==(detail::sp_nullptr_t, const shared_array<T>&)’
  259 | template<class T> inline bool operator==( boost::detail::sp_nullptr_t, shared_array<T> const & p ) BOOST_SP_NOEXCEPT
      |                               ^~~~~~~~
/usr/include/boost/smart_ptr/shared_array.hpp:259:31: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   mismatched types ‘const boost::shared_array<T>’ and ‘const long unsigned int’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
In file included from /usr/include/boost/intrusive_ptr.hpp:16,
                 from /usr/include/boost/smart_ptr.hpp:22:
/usr/include/boost/smart_ptr/intrusive_ptr.hpp:218:40: note: candidate: ‘template<class T, class U> bool boost::operator==(const intrusive_ptr<T>&, const intrusive_ptr<U>&)’
  218 | template<class T, class U> inline bool operator==(intrusive_ptr<T> const & a, intrusive_ptr<U> const & b) BOOST_SP_NOEXCEPT
      |                                        ^~~~~~~~
/usr/include/boost/smart_ptr/intrusive_ptr.hpp:218:40: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   ‘boost::iterators::detail::iterator_facade_base<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> > > > >, long unsigned int, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int>, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int, false, false>::reference’ {aka ‘boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>’} is not derived from ‘const boost::intrusive_ptr<T>’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
/usr/include/boost/smart_ptr/intrusive_ptr.hpp:228:40: note: candidate: ‘template<class T, class U> bool boost::operator==(const intrusive_ptr<T>&, U*)’
  228 | template<class T, class U> inline bool operator==(intrusive_ptr<T> const & a, U * b) BOOST_SP_NOEXCEPT
      |                                        ^~~~~~~~
/usr/include/boost/smart_ptr/intrusive_ptr.hpp:228:40: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   ‘boost::iterators::detail::iterator_facade_base<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> > > > >, long unsigned int, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int>, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int, false, false>::reference’ {aka ‘boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>’} is not derived from ‘const boost::intrusive_ptr<T>’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
/usr/include/boost/smart_ptr/intrusive_ptr.hpp:238:40: note: candidate: ‘template<class T, class U> bool boost::operator==(T*, const intrusive_ptr<U>&)’
  238 | template<class T, class U> inline bool operator==(T * a, intrusive_ptr<U> const & b) BOOST_SP_NOEXCEPT
      |                                        ^~~~~~~~
/usr/include/boost/smart_ptr/intrusive_ptr.hpp:238:40: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   mismatched types ‘T*’ and ‘boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
/usr/include/boost/smart_ptr/intrusive_ptr.hpp:261:31: note: candidate: ‘template<class T> bool boost::operator==(const intrusive_ptr<T>&, detail::sp_nullptr_t)’
  261 | template<class T> inline bool operator==( intrusive_ptr<T> const & p, boost::detail::sp_nullptr_t ) BOOST_SP_NOEXCEPT
      |                               ^~~~~~~~
/usr/include/boost/smart_ptr/intrusive_ptr.hpp:261:31: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   ‘boost::iterators::detail::iterator_facade_base<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> > > > >, long unsigned int, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int>, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int, false, false>::reference’ {aka ‘boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>’} is not derived from ‘const boost::intrusive_ptr<T>’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
/usr/include/boost/smart_ptr/intrusive_ptr.hpp:266:31: note: candidate: ‘template<class T> bool boost::operator==(detail::sp_nullptr_t, const intrusive_ptr<T>&)’
  266 | template<class T> inline bool operator==( boost::detail::sp_nullptr_t, intrusive_ptr<T> const & p ) BOOST_SP_NOEXCEPT
      |                               ^~~~~~~~
/usr/include/boost/smart_ptr/intrusive_ptr.hpp:266:31: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   mismatched types ‘const boost::intrusive_ptr<T>’ and ‘const long unsigned int’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
In file included from /usr/include/boost/core/alloc_construct.hpp:11,
                 from /usr/include/boost/smart_ptr/allocate_shared_array.hpp:12,
                 from /usr/include/boost/smart_ptr/make_shared_array.hpp:12,
                 from /usr/include/boost/smart_ptr/make_shared.hpp:17,
                 from /usr/include/boost/make_shared.hpp:14,
                 from /usr/include/boost/smart_ptr.hpp:24:
/usr/include/boost/core/noinit_adaptor.hpp:64:1: note: candidate: ‘template<class T, class U> bool boost::operator==(const noinit_adaptor<T>&, const noinit_adaptor<U>&)’
   64 | operator==(const noinit_adaptor<T>& lhs,
      | ^~~~~~~~
/usr/include/boost/core/noinit_adaptor.hpp:64:1: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   ‘boost::iterators::detail::iterator_facade_base<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> > > > >, long unsigned int, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int>, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int, false, false>::reference’ {aka ‘boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>’} is not derived from ‘const boost::noinit_adaptor<T>’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
In file included from /usr/include/boost/graph/adjacency_list.hpp:32:
/usr/include/boost/graph/detail/edge.hpp:56:17: note: candidate: ‘template<class D, class V> bool boost::detail::operator==(const edge_desc_impl<D, V>&, const edge_desc_impl<D, V>&)’
   56 |     inline bool operator==(const detail::edge_desc_impl< D, V >& a,
      |                 ^~~~~~~~
/usr/include/boost/graph/detail/edge.hpp:56:17: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   mismatched types ‘const boost::detail::edge_desc_impl<D, V>’ and ‘const long unsigned int’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
/usr/include/boost/function/function_base.hpp:715:13: note: candidate: ‘bool boost::operator==(const function_base&, detail::function::useless_clear_type*)’
  715 | inline bool operator==(const function_base& f,
      |             ^~~~~~~~
/usr/include/boost/function/function_base.hpp:715:45: note:   no known conversion for argument 1 from ‘boost::iterators::detail::iterator_facade_base<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> > > > >, long unsigned int, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int>, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int, false, false>::reference’ {aka ‘boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>’} to ‘const boost::function_base&’
  715 | inline bool operator==(const function_base& f,
      |                        ~~~~~~~~~~~~~~~~~~~~~^
/usr/include/boost/function/function_base.hpp:727:13: note: candidate: ‘bool boost::operator==(detail::function::useless_clear_type*, const function_base&)’
  727 | inline bool operator==(detail::function::useless_clear_type*,
      |             ^~~~~~~~
/usr/include/boost/function/function_base.hpp:727:24: note:   no known conversion for argument 1 from ‘boost::iterators::detail::iterator_facade_base<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> > > > >, long unsigned int, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int>, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int, false, false>::reference’ {aka ‘boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>’} to ‘boost::detail::function::useless_clear_type*’
  727 | inline bool operator==(detail::function::useless_clear_type*,
      |                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/boost/function_types/parameter_types.hpp:12,
                 from /usr/include/boost/tti/detail/dftclass.hpp:10,
                 from /usr/include/boost/tti/detail/dcomp_mem_fun.hpp:12,
                 from /usr/include/boost/tti/detail/dmem_fun.hpp:22,
                 from /usr/include/boost/tti/has_member_function.hpp:15,
                 from /usr/include/boost/graph/depth_first_search.hpp:28,
                 from /usr/include/boost/graph/topological_sort.hpp:16,
                 from config.h:22:
/usr/include/boost/blank.hpp:58:13: note: candidate: ‘bool boost::operator==(const blank&, const blank&)’
   58 | inline bool operator==(const blank&, const blank&)
      |             ^~~~~~~~
/usr/include/boost/blank.hpp:58:24: note:   no known conversion for argument 1 from ‘boost::iterators::detail::iterator_facade_base<boost::detail::out_edge_iter<__gnu_cxx::__normal_iterator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >*, std::vector<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> >, std::allocator<boost::detail::stored_edge_iter<long unsigned int, std::_List_iterator<boost::list_edge<long unsigned int, boost::property<boost::vertex_index_t, long unsigned int> > >, boost::property<boost::vertex_index_t, long unsigned int> > > > >, long unsigned int, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int>, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, boost::iterators::random_access_traversal_tag, boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>, long int, false, false>::reference’ {aka ‘boost::detail::edge_desc_impl<boost::bidirectional_tag, long unsigned int>’} to ‘const boost::blank&’
   58 | inline bool operator==(const blank&, const blank&)
      |                        ^~~~~~~~~~~~
